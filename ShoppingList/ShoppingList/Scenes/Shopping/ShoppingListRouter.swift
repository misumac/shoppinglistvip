//
//  ShoppingListRouter.swift
//  ShoppingList
//
//  Created by Mihai on 3/11/17.
//  Copyright (c) 2017 Mihai. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol ShoppingListRouterInput {
    
}

protocol ShoppingListRouterDataSource:class {
    var selectedItem: ListItem? { get }
}

protocol ShoppingListRouterDataDestination:class {
    
}

class ShoppingListRouter: ShoppingListRouterInput {
    
    weak var viewController:ShoppingListViewController!
    weak private var dataSource:ShoppingListRouterDataSource!
    weak var dataDestination:ShoppingListRouterDataDestination!
    
    struct SegueIdentifiers {
        static let addItemSegue = "AddListItemSegue"
    }
    
    init(viewController:ShoppingListViewController, dataSource:ShoppingListRouterDataSource, dataDestination:ShoppingListRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    func navigateToAddItemScene() {
        viewController.performSegue(withIdentifier: SegueIdentifiers.addItemSegue, sender: viewController)
    }
    
    // MARK: Communication
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {
        // NOTE: Teach the router which scenes it can communicate with
        guard let segueId = segue.identifier else {
            return
        }
        switch segueId {
        case SegueIdentifiers.addItemSegue:
            passDataToAddItemScene(segue: segue)
        default:
            return
        }
    }
    
    func passDataToAddItemScene(segue: UIStoryboardSegue) {
        if let addListItemViewController = segue.destination as? AddListItemViewController {
            addListItemViewController.router.dataDestination.item = dataSource.selectedItem
        }
    }
}
