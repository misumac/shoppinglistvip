//
//  CategoriesListRouter.swift
//  ShoppingList
//
//  Created by Mihai on 3/18/17.
//  Copyright (c) 2017 Mihai. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol CategoriesListRouterInput {
    
}

protocol CategoriesListRouterDataSource:class {
    var selectedCategory: Category? { get }
}

protocol CategoriesListRouterDataDestination:class {
    
}

class CategoriesListRouter: CategoriesListRouterInput {
    
    weak var viewController:CategoriesListViewController!
    weak private var dataSource:CategoriesListRouterDataSource!
    weak var dataDestination:CategoriesListRouterDataDestination!
    
    struct SegueIdentifiers {
        static let showItemsSegue = "ShowItems"
    }
    
    init(viewController:CategoriesListViewController, dataSource:CategoriesListRouterDataSource, dataDestination:CategoriesListRouterDataDestination) {
        self.viewController = viewController
        self.dataSource = dataSource
        self.dataDestination = dataDestination
    }
    
    // MARK: Navigation
    func navigateToItemsInCategoryScene() {
        viewController.performSegue(withIdentifier: SegueIdentifiers.showItemsSegue, sender: viewController)
    }
    // MARK: Communication
    
    func passDataToNextScene(for segue: UIStoryboardSegue) {
        // NOTE: Teach the router which scenes it can communicate with
        guard let segueId = segue.identifier else {
            return
        }
        switch segueId {
        case SegueIdentifiers.showItemsSegue:
            passDataToItemsScene(segue: segue)
        default:
            break
        }
    }
    
    func passDataToItemsScene(segue: UIStoryboardSegue) {
        if let dc = segue.destination as? ItemsInCategoryViewController {
            dc.router.dataDestination.selectedCategory = dataSource.selectedCategory
        }
    }
}
